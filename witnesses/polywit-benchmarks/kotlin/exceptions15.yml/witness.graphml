<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>&lt;command-line&gt;</default>
  </key>
  <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
  <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
    <default>false</default>
  </key>
  <key attr.name="cyclehead" attr.type="boolean" for="edge" id="cyclehead">
    <default>false</default>
  </key>
  <key attr.name="threadId" attr.type="int" for="edge" id="threadId">
    <default>0</default>
  </key>
  <key attr.name="createThread" attr.type="int" for="edge" id="createThread">
    <default>0</default>
  </key>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
  <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
  <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
  <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
  <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
  <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
  <graph edgedefault="directed">
    <data key="sourcecodelang">C</data>
    <node id="sink"/>
    <node id="907.271">
      <data key="entry">true</data>
    </node>
    <edge source="907.271" target="908.284">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
    <node id="907.273"/>
    <node id="907.275"/>
    <node id="907.277"/>
    <node id="907.279"/>
    <node id="907.281"/>
    <node id="908.284">
      <data key="invariant">dynamic_object1 = nondet_symbol(symex::nondet1);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="908.284" target="911.298">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
    <node id="908.286"/>
    <node id="908.288"/>
    <node id="908.290"/>
    <node id="908.292"/>
    <node id="911.298">
      <data key="invariant">dynamic_object1.@java.lang.Object.@class_identifier = "java::array[reference]";</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="911.298" target="914.302">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
    <node id="914.302">
      <data key="invariant">dynamic_object1.length = nondet_array_length;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="914.302" target="915.303">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
    <node id="915.303">
      <data key="invariant">dynamic_object1.data = (void **)dynamic_2_array;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="915.303" target="927.336">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
    <node id="915.305"/>
    <node id="915.307"/>
    <node id="915.309"/>
    <node id="915.311"/>
    <node id="915.313"/>
    <node id="927.336">
      <data key="invariant">dynamic_2_array = ARRAY_OF(null);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="927.336" target="940.592">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
    <node id="927.371"/>
    <node id="927.406"/>
    <node id="927.441"/>
    <node id="927.476"/>
    <node id="940.592">
      <data key="invariant">dynamic_object4 = nondet_symbol(symex::nondet5);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="940.592" target="0.597">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
    <node id="0.597">
      <data key="invariant">args = &amp;dynamic_object1;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="0.597" target="25.602">
      <data key="originfile">kotlin/jvm/internal/Intrinsics.java</data>
      <data key="startline">130</data>
    </edge>
    <node id="25.602"/>
    <edge source="25.602" target="26.607">
      <data key="originfile">Main.kt</data>
      <data key="startline">22</data>
    </edge>
    <node id="25.604"/>
    <node id="26.607">
      <data key="invariant">dynamic_object13 = nondet_symbol(symex::nondet22);</data>
      <data key="invariant.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="26.607" target="29.610">
      <data key="originfile">Main.kt</data>
      <data key="startline">22</data>
    </edge>
    <node id="29.610">
      <data key="invariant">dynamic_object13.@java.lang.Object.@class_identifier = "java::InetAddress";</data>
      <data key="invariant.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="29.610" target="8.613">
      <data key="originfile">Main.kt</data>
      <data key="startline">22</data>
    </edge>
    <node id="8.613">
      <data key="invariant">this = &amp;dynamic_object13;</data>
      <data key="invariant.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="8.613" target="33.620">
      <data key="originfile">Main.kt</data>
      <data key="startline">9</data>
    </edge>
    <node id="33.620">
      <data key="invariant">this = (struct java.lang.Object *)&amp;dynamic_object13;</data>
      <data key="invariant.scope">java::InetAddress.&lt;init&gt;:()V</data>
    </node>
    <edge source="33.620" target="34.623">
      <data key="originfile">Main.kt</data>
      <data key="startline">22</data>
    </edge>
    <node id="34.623">
      <data key="invariant">address = &amp;dynamic_object13;</data>
      <data key="invariant.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="34.623" target="0.628">
      <data key="originfile">Main.kt</data>
      <data key="startline">23</data>
    </edge>
    <node id="0.628">
      <data key="invariant">address = &amp;dynamic_object13;</data>
      <data key="invariant.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="0.628" target="35.634">
      <data key="originfile">kotlin/jvm/internal/Intrinsics.java</data>
      <data key="startline">130</data>
    </edge>
    <node id="35.634"/>
    <edge source="35.634" target="44.638">
      <data key="originfile">Main.kt</data>
      <data key="startline">23</data>
    </edge>
    <node id="44.638"/>
    <edge source="44.638" target="49.643">
      <data key="originfile">Main.kt</data>
      <data key="startline">23</data>
    </edge>
    <node id="49.643">
      <data key="invariant">address = &amp;dynamic_object13;</data>
      <data key="invariant.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="49.643" target="941.647">
      <data key="originfile">Main.kt</data>
      <data key="startline">23</data>
    </edge>
    <node id="941.647">
      <data key="invariant">anonlocal::2a = (void *)&amp;Foo;</data>
      <data key="invariant.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="941.647" target="sink">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
    </edge>
  </graph>
</graphml>
