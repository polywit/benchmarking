<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>&lt;command-line&gt;</default>
  </key>
  <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
  <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
    <default>false</default>
  </key>
  <key attr.name="cyclehead" attr.type="boolean" for="edge" id="cyclehead">
    <default>false</default>
  </key>
  <key attr.name="threadId" attr.type="int" for="edge" id="threadId">
    <default>0</default>
  </key>
  <key attr.name="createThread" attr.type="int" for="edge" id="createThread">
    <default>0</default>
  </key>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
  <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
  <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
  <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
  <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
  <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
  <graph edgedefault="directed">
    <data key="sourcecodelang">C</data>
    <data key="witness-type">violation_witness</data>
    <node id="sink"/>
    <node id="950.128">
      <data key="entry">true</data>
    </node>
    <edge source="950.128" target="0.165">
      <data key="originfile">Main.kt</data>
      <data key="startline">17</data>
      <data key="threadId">0</data>
    </edge>
    <node id="0.165"/>
    <edge source="0.165" target="29.171">
      <data key="originfile">kotlin/jvm/internal/Intrinsics.java</data>
      <data key="startline">130</data>
      <data key="threadId">0</data>
    </edge>
    <node id="29.171"/>
    <edge source="29.171" target="30.172">
      <data key="originfile">Main.kt</data>
      <data key="startline">19</data>
      <data key="threadId">0</data>
      <data key="assumption">i = 0;</data>
      <data key="assumption.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </edge>
    <node id="30.172"/>
    <edge source="30.172" target="34.180">
      <data key="originfile">Main.kt</data>
      <data key="startline">20</data>
      <data key="threadId">0</data>
    </edge>
    <node id="34.180"/>
    <edge source="34.180" target="8.183">
      <data key="originfile">Main.kt</data>
      <data key="startline">20</data>
      <data key="threadId">0</data>
    </edge>
    <node id="8.183"/>
    <edge source="8.183" target="11.186">
      <data key="originfile">Main.kt</data>
      <data key="startline">9</data>
      <data key="threadId">0</data>
    </edge>
    <node id="11.186"/>
    <edge source="11.186" target="41.189">
      <data key="originfile">Main.kt</data>
      <data key="startline">10</data>
      <data key="threadId">0</data>
    </edge>
    <node id="41.189"/>
    <edge source="41.189" target="52.196">
      <data key="originfile">Main.kt</data>
      <data key="startline">20</data>
      <data key="threadId">0</data>
    </edge>
    <node id="52.196"/>
    <edge source="52.196" target="55.199">
      <data key="originfile">Main.kt</data>
      <data key="startline">21</data>
      <data key="threadId">0</data>
    </edge>
    <node id="55.199"/>
    <edge source="55.199" target="66.206">
      <data key="originfile">Main.kt</data>
      <data key="startline">22</data>
      <data key="threadId">0</data>
    </edge>
    <node id="66.206"/>
    <edge source="66.206" target="160.229">
      <data key="originfile">Main.kt</data>
      <data key="startline">22</data>
      <data key="threadId">0</data>
      <data key="assumption">anonlocal::2i = 0;</data>
      <data key="assumption.scope">java::MainKt.main:([Ljava/lang/String;)V</data>
    </edge>
    <node id="160.229"/>
    <edge source="160.229" target="192.246">
      <data key="originfile">kotlin/AssertionsJVM.kt</data>
      <data key="startline">10</data>
      <data key="threadId">0</data>
    </edge>
    <node id="192.246"/>
    <edge source="192.246" target="195.254">
      <data key="originfile">kotlin/AssertionsJVM.kt</data>
      <data key="startline">14</data>
      <data key="threadId">0</data>
    </edge>
    <node id="195.254">
      <data key="violation">true</data>
    </node>
  </graph>
</graphml>
